{"version":3,"sources":["src/device-orientation.js","src/lazyFonts.js","src/no-js.js","src/page-transitions.js"],"names":[],"mappingstHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"main.js","sourcesContent":["(function(window, undefined) {\n\t/*jshint undef:false*/\n\t'use strict';\n\n\t// Require\n\t//var FULLTILT = require('fulltilt');\n\t//var GyroNorm = require('gyronorm');\n\n\t// Vars \n\tvar a = document.getElementById('a');\n\tvar b = document.getElementById('b');\n\tvar g = document.getElementById('g');\n\n\t// ==================================\n\t// Helper Functions\n\n\t// Round up numbers to 2 decimal places\n\tvar roundUpDec = (value, decimals) => Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n\n\t// Converts from degrees to percent.\n\tvar degreeToPercent = (degrees) => (degrees / 360 * 100);\n\n\t// Args\n\t// var args = {\n\t// \tfrequency:50,\t\t\t\t\t// ( How often the object sends the values - milliseconds )\n\t// \tgravityNormalized:true,\t\t\t// ( If the gravity related values to be normalized )\n\t// \torientationBase:GyroNorm.GAME,\t\t// ( Can be GyroNorm.GAME or GyroNorm.WORLD. gn.GAME returns orientation values with respect to the head direction of the device. gn.WORLD returns the orientation values with respect to the actual north direction of the world. )\n\t// \tdecimalCount:2,\t\t\t\t\t// ( How many digits after the decimal point will there be in the return values )\n\t// \tlogger:null,\t\t\t\t\t// ( Function to be called to log messages from gyronorm.js )\n\t// \tscreenAdjusted:false\t\t\t// ( If set to true it will return screen adjusted values. )\n\t// };\n\n\t/*\n\t// Create new GyroNorm object\n\tvar gn = new GyroNorm();\n\n\tgn.init(args).then(function(){\n\t  gn.start(function(data){\n\n\t    // Process:\n\t    // data.do.alpha\t( deviceorientation event alpha value )\n\t    // data.do.beta\t\t( deviceorientation event beta value )\n\t    // data.do.gamma\t( deviceorientation event gamma value )\n\t    // data.do.absolute\t( deviceorientation event absolute value )\n\n\t    // data.dm.x\t\t( devicemotion event acceleration x value )\n\t    // data.dm.y\t\t( devicemotion event acceleration y value )\n\t    // data.dm.z\t\t( devicemotion event acceleration z value )\n\n\t    // data.dm.gx\t\t( devicemotion event accelerationIncludingGravity x value )\n\t    // data.dm.gy\t\t( devicemotion event accelerationIncludingGravity y value )\n\t    // data.dm.gz\t\t( devicemotion event accelerationIncludingGravity z value )\n\n\t    // data.dm.alpha\t( devicemotion event rotationRate alpha value )\n\t    // data.dm.beta\t\t( devicemotion event rotationRate beta value )\n\t    // data.dm.gamma\t( devicemotion event rotationRate gamma value )\n\n\n\t    // Spit out the info\n\t\t\t// Make sure it's on the page\n\t\t\tif (typeof a !== 'undefined') {\n\t\t  \ta.innerHTML = 'Alpha: ' + data.do.alpha + '%';\n\t\t\t}\n\t\t\tif (typeof b !== 'undefined') {\n\t\t  \tb.innerHTML = 'Beta: ' + data.do.beta;\n\t\t\t}\n\t\t\tif (typeof g !== 'undefined') {\n\t\t  \tg.innerHTML = 'Gamma: ' + data.do.gamma;\t\t\t\t  \n\t\t \t}\n\n\n\t  });\n\t}).catch(function(){\n\t  // Catch if the DeviceOrientation or DeviceMotion is not supported by the browser or device\n\n\t  a.innerHTML = 'Seems your device doesn\\'t include deviceorientation :('; \n\n\t});\n\n\t*/\n\n\t// If it exists, great, if not, just make it an empty object\n\tvar DeviceOrientation = DeviceOrientation || {};\n\n\n\tDeviceOrientation = function() {\n\n\t\tfunction init() {\n\n\t\t\t\t\n\t\t\t\t// ==================\n\t\t\t\t// DEVICE ORIENTATION\n\n\t\t\t\twindow.addEventListener('deviceorientation', function(event) {\n\n\t\t\t\t\t// Vars\n\t\t\t\t\tvar deviceDirectionPercent = degreeToPercent(roundUpDec(event.alpha, 2));\n\n\t\t\t\t\t// Make sure it's on the page\n\t\t\t\t\tif (typeof a !== 'undefined') {\n\t\t\t\t  \ta.innerHTML = 'Alpha: ' + event.alpha + ' -- ' + deviceDirectionPercent + '%';\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof b !== 'undefined') {\n\t\t\t\t  \tb.innerHTML = 'Beta: ' + event.beta;\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof g !== 'undefined') {\n\t\t\t\t  \tg.innerHTML = 'Gamma: ' + event.gamma;\t\t\t\t  \n\t\t\t\t \t}\n\t\t\t\t});\n\n\t\t}\n\n\t\tinit();\n\t};\n\n\tnew DeviceOrientation();\n\n})(window);\n","(function(window, undefined) {\n\t/*jshint undef:false*/\n\t'use strict';\n\n\tvar LazyFonts = LazyFonts || {};\n\n\tLazyFonts = function() {\n\n\t\tfunction init() {\n\t\t\tvar lato = document.createElement('link');\n            lato.rel = 'stylesheet';\n            lato.href = 'https://fonts.googleapis.com/css?family=Lato:300,900';\n\t\t\tdocument.head.appendChild(lato);\n\t\t}\n\n\t\tinit();\n\t};\n\n\tnew LazyFonts();\n\n})(window);\n","(function(window, undefined) {\n\t/*jshint undef:false*/\n\t'use strict';\n\n\tdocument.body.classList.remove('no-js');\n\tdocument.body.classList.add('js');\n\n})(window);\n","(function(window, undefined) {\n\t/*jshint undef:false*/\n\t'use strict';\n\n\t// Require\n\tvar Barba = require('barba.js');\n\tvar ImagesLoaded = require('imagesLoaded');\n\t\n\t// =========================================\n\t// Vars\n\tvar body = document.getElementsByTagName('body')[0];\n\tvar cssTransitionTime = 200;\n\tvar transitionWrapper = document.getElementsByClassName('o-journey-inner')[0];\n\t\n\t// =========================================\n\t// Settings\n\t// rename wrappers\n\tBarba.Pjax.Dom.wrapperId = 'o-journey-outer';\n\tBarba.Pjax.Dom.containerClass = 'o-journey-inner';\n\n\t// Define barba transition length\n\tBarba.transitionLength = 200;\n\n\t// =========================================\n\t// Helper functions (move to module.exports?)\n\tfunction loaderReady() {\n\t\tnew ImagesLoaded( body, { background: true }, function( ) {\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tbody.classList.remove('loading');\n\t\t\t\ttransitionWrapper.classList.add('show');\n\t\t\t\tconsole.log('Images are loaded');\n\n\t\t\t}, cssTransitionTime);\n\n\t\t});\n\t}\n\n\n\t// =========================================\n\t// Starter functions - trigger on page ready\n\tloaderReady();\n\n\n\tvar FadeTransition = Barba.BaseTransition.extend({\n  start: function() {\n    /**\n     * This function is automatically called as soon the Transition starts\n     * this.newContainerLoading is a Promise for the loading of the new container\n     * (Barba.js also comes with an handy Promise polyfill!)\n     */\n\n    // Trigger loader icon\n    body.classList.add('loading');\n\n    // As soon the loading is finished and the old page is faded out, let's fade the new page\n    Promise\n\t      .all([this.newContainerLoading, this.fadeOut()])\n\t      .then(this.fadeIn.bind(this));\n\t  },\n\n\t  fadeOut: function() {\n\t    /**\n\t     * this.oldContainer is the HTMLElement of the old Container\n\t     */\n\n\n\t\t\t   this.oldContainer.classList.add('hide');\n\t\t\t   this.oldContainer.classList.remove('show');\n\n\t\t\t   // Fulfill promise after CSS transition is complete\n\t\t\t   return new Promise(function(resolve) {\n\t\t        setTimeout(resolve, cssTransitionTime);\n\t\t    });\n\n\t    \n\t  },\n\n\t  fadeIn: function() {\n\t    /**\n\t     * this.newContainer is the HTMLElement of the new Container\n\t     * At this stage newContainer is on the DOM (inside our #barba-container and with visibility: hidden)\n\t     * Please note, newContainer is available just after newContainerLoading is resolved!\n\t     */\n\n\t    var _this = this;\n\t    //var $el = this.newContainer\n\n\t    //this.oldContainer.classList.add('hide');\n\t    this.oldContainer.style.visibility = 'hidden';\n\t    this.oldContainer.style.height='0';\n\t    this.newContainer.style.visibility = 'visible';\n\t    this.newContainer.classList.remove('hide');\n\t    this.newContainer.classList.add('show');\n\n\t    document.body.scrollTop = 0;\n\n\t    loaderReady();\n\n\n\t    setTimeout(function(){ \n\t\t\t\t_this.done();\n\t    }, cssTransitionTime);\n\n\t  }\n\t});\n\n\t/**\n\t * Next step, you have to tell Barba to use the new Transition\n\t */\n\n\tBarba.Pjax.getTransition = function() {\n\t  /**\n\t   * Here you can use your own logic!\n\t   * For example you can use different Transition based on the current page or link...\n\t   */\n\n\t  return FadeTransition;\n\t};\n\n\nBarba.Pjax.start();\n\n})(window);\n"],"sourceRoot":"/source/"}